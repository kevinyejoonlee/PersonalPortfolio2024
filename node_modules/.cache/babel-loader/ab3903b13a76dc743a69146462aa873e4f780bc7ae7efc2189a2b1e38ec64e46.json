{"ast":null,"code":"var _jsxFileName = \"/Users/kevinlee/VSCODE/2023 web development course/16.5 portfolio/portfolio/src/components/Navbar/Navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Navbar.css';\nimport { Link } from 'react-scroll';\nimport sun from \"../../assets/symbols/sun.svg\";\nimport moon from \"../../assets/symbols/moon.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  // Introduce a state to mnage the theme\n  const [theme, setTheme] = useState('dark'); // default to 'dark' or 'light' based on your preference\n\n  // This effect will update the icon based on the theme state\n  useEffect(() => {\n    const icon = document.getElementById(\"toggle_icon\"); // Get the icon in the effect where the element is sure to exist\n    icon.src = theme === 'light' ? sun : moon;\n    document.body.classList.toggle(\"light_theme\", theme === 'light');\n  }, [theme]); // Dependency array ensures this effect runs only when theme changes\n\n  // Update the toggleTheme function\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"Navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"desktopMenu\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        className: \"desktopMenuListItem\",\n        children: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"desktopMenuListItem\",\n        children: \"Experience\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"desktopMenuListItem\",\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"desktopMenuListItem\",\n        children: \"Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleTheme,\n      id: \"apperance_b\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"toggle_icon\",\n        className: \"apperance_icon\",\n        src: \"\",\n        alt: \"apperance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"D0ekClnfIGVExrH5c3Ka+aWcxxE=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","Link","sun","moon","jsxDEV","_jsxDEV","Navbar","_s","theme","setTheme","icon","document","getElementById","src","body","classList","toggle","toggleTheme","prevTheme","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","alt","_c","$RefreshReg$"],"sources":["/Users/kevinlee/VSCODE/2023 web development course/16.5 portfolio/portfolio/src/components/Navbar/Navbar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Navbar.css';\nimport { Link } from 'react-scroll';\nimport sun from \"../../assets/symbols/sun.svg\";\nimport moon from \"../../assets/symbols/moon.svg\";\n\nconst Navbar = () => {\n  // Introduce a state to mnage the theme\n  const [theme, setTheme] = useState('dark'); // default to 'dark' or 'light' based on your preference\n\n  // This effect will update the icon based on the theme state\n  useEffect(() => {\n    const icon = document.getElementById(\"toggle_icon\"); // Get the icon in the effect where the element is sure to exist\n    icon.src = theme === 'light' ? sun : moon;\n    document.body.classList.toggle(\"light_theme\", theme === 'light');\n  }, [theme]); // Dependency array ensures this effect runs only when theme changes\n\n  // Update the toggleTheme function\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\n  };\n\n  return (\n    <nav className='Navbar'>\n      <div className=\"desktopMenu\">\n        <Link className=\"desktopMenuListItem\">About</Link>\n        <Link className=\"desktopMenuListItem\">Experience</Link>\n        <Link className=\"desktopMenuListItem\">Projects</Link>\n        <Link className=\"desktopMenuListItem\">Contact</Link>\n      </div>\n\n      <button onClick={toggleTheme} id=\"apperance_b\">\n        <img id=\"toggle_icon\" className=\"apperance_icon\" src=\"\" alt=\"apperance\" />\n      </button>\n    </nav>\n  );\n};\n\nexport default Navbar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,cAAc;AACrB,SAASC,IAAI,QAAQ,cAAc;AACnC,OAAOC,GAAG,MAAM,8BAA8B;AAC9C,OAAOC,IAAI,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMU,IAAI,GAAGC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAAC,CAAC;IACrDF,IAAI,CAACG,GAAG,GAAGL,KAAK,KAAK,OAAO,GAAGN,GAAG,GAAGC,IAAI;IACzCQ,QAAQ,CAACG,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,aAAa,EAAER,KAAK,KAAK,OAAO,CAAC;EAClE,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEb;EACA,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxBR,QAAQ,CAACS,SAAS,IAAIA,SAAS,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;EACjE,CAAC;EAED,oBACEb,OAAA;IAAKc,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBf,OAAA;MAAKc,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1Bf,OAAA,CAACJ,IAAI;QAACkB,SAAS,EAAC,qBAAqB;QAAAC,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAClDnB,OAAA,CAACJ,IAAI;QAACkB,SAAS,EAAC,qBAAqB;QAAAC,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvDnB,OAAA,CAACJ,IAAI;QAACkB,SAAS,EAAC,qBAAqB;QAAAC,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACrDnB,OAAA,CAACJ,IAAI;QAACkB,SAAS,EAAC,qBAAqB;QAAAC,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eAENnB,OAAA;MAAQoB,OAAO,EAAER,WAAY;MAACS,EAAE,EAAC,aAAa;MAAAN,QAAA,eAC5Cf,OAAA;QAAKqB,EAAE,EAAC,aAAa;QAACP,SAAS,EAAC,gBAAgB;QAACN,GAAG,EAAC,EAAE;QAACc,GAAG,EAAC;MAAW;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACjB,EAAA,CA9BID,MAAM;AAAAsB,EAAA,GAANtB,MAAM;AAgCZ,eAAeA,MAAM;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}